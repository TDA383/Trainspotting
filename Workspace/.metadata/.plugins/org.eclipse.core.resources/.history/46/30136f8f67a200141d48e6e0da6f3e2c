import java.util.concurrent.*;

import TSim.*;

public class TrainSemaphore extends Semaphore {

	private Train t1;
	private Train t2;
	
	public TrainSemaphore(int permits) {
		super(permits);
	}
	
	public void acquire(Train t) throws InterruptedException {
		if (t1 != null) {
			t1 = t;
		} else if (t2 != null) {
			t2 = t;
		} else {
			super.acquire();
			return;
		}
		t.changeSpeed(t.getSpeed());
		super.acquire();
	}
	
	public void release() {
		super.release();
		t.changeSpeed(t.getSpeed());
		t = null;
	}
}
